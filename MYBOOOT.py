import telebot
import os
import importlib
from telebot import types
bot = telebot.TeleBot('7888167162:AAFaur7xiREy3cBebFCmSP0LQ8jmoGQ5zwo')
a = 0

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤ –∏–∑ –ø–∞–ø–∫–∏
for f in os.listdir('plugins'):
    if f.endswith('.py'):
        module = importlib.import_module(f'plugins.{f[:-3]}')
        module.run(bot)

# –∫–ª–∞—Å—Å Question –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
class Question:
    def __init__(self, prompt: str, answer: str):
        self.prompt = prompt
        self.answer = answer

    def check_answer(self, user_answer: str) -> bool:
        return user_answer.strip().lower() == self.answer.lower()

# –∫–ª–∞—Å—Å Quiz –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ª–æ–≥–∏–∫—É –≤—Å–µ–≥–æ –∫–≤–∏–∑–∞
class Quiz:
    def __init__(self, questions: list):
        self.bot = bot
        self.questions = questions
        self.score = 0
        self.result = lambda f: round(f*100/a)
        self.run()

    def run(self):
        @self.bot.message_handler(content_types=['text'])
        def start(message):
            self.sprosil(message)

    def sprosil(self, message):
        global a
        if a < len(self.questions):
            question = self.questions[a]
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton(answer_prompts[2*a])
            btn2 = types.KeyboardButton(answer_prompts[2*a+1])
            markup.add(btn1, btn2)
            mesg = bot.send_message(message.chat.id, question.prompt, reply_markup=markup)
            bot.register_next_step_handler(mesg, self.otvetil)

    def otvetil(self, message):
        global a
        user_answer = message.text
        question = self.questions[a]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markupf = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("—Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å")
        btnf = types.KeyboardButton("–µ—â–µ —Ä–∞–∑!")
        markup.add(btn1)
        markupf.add(btnf)
        if question.check_answer(user_answer):
            self.score += 1
        a = a+1
        if a < len(self.questions):
            bot.send_message(message.chat.id, '–æ–∫üëå', reply_markup=markup)
        if a == len(self.questions):
            bot.send_message(message.chat.id, f"–ò—Ç–æ–≥–æ {self.result(self.score)}% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤!")
            self.show(message)
            a = 0
            self.score = 0
            bot.send_message(message.chat.id, "–ú–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –∫–≤–∏–∑ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ—Ç—ã–∫–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏",
                             reply_markup=markupf)

    def show(self, message):
        if self.result(self.score) == 100:
            bot.send_message(message.chat.id, "–ò–¥–µ–∞–ª—å–Ω–æ! –í –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–πüíª")
        elif self.result(self.score) >= 50:
            bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ –∑–Ω–∞–µ—à—å –≥–æ—Ä–æ–¥, –∫—Ä–∞—Å–∞–≤—á–∏–∫!")
        else:
            bot.send_message(message.chat.id, "–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: —Ç—É—Ä–∏—Å—Ç. –ü—Ä–∏–µ–∑–∂–∞–π—Ç–µ –≤ –≥–æ—Å—Ç–∏!")

# –∫–ª–∞—Å—Å MyBot —Ä–µ–∞–ª–∏–∑—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è (–æ—Ç–≤–µ—Ç—ã) –±–æ—Ç–∞
class MyBot:
    def __init__(self):
        self.bot = bot
        self.reg()

    def reg(self):
        @self.bot.message_handler(commands=['start'])
        def start(message):
            self.main(message)

        @self.bot.message_handler(commands=['quiz'])
        def quiz(message):
            self.minor(message)

    def main(self, message):
        welcome = "–ù–∞–∂–º–∏ /quiz, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∫–≤–∏–∑."
        self.bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!')
        self.bot.send_message(message.chat.id, welcome)

    def minor(self, message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ø–æ–µ—Ö–∞–ª–∏üëÜ")
        markup.add(btn1)
        self.bot.send_message(message.chat.id, "–ù–∞—á–Ω–µ–º!", reply_markup=markup)
        Quiz(questions).run()

    def run(self):
        self.bot.polling(none_stop=True)

# —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤-–æ—Ç–≤–µ—Ç–æ–≤

with open('questions.txt', 'r', encoding="utf-8") as file:
    question_prompts = file.readlines()
    question_prompts = [line.rstrip() for line in question_prompts]
with open('answers.txt', 'r', encoding="utf-8") as file:
    answers = file.readlines()
    answers = [line.rstrip() for line in answers]
with open('answer_prompts.txt', 'r', encoding="utf-8") as file:
    answer_prompts = file.readlines()
    answer_prompts = [line.rstrip() for line in answer_prompts]

questions = [Question(prompt, answer) for prompt, answer in zip(question_prompts, answers)]
MyBot().run()

# –±–æ—Ç–∞ –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤ –≤ –ø–∞–ø–∫—É —Å –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
# —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã/–æ—Ç–≤–µ—Ç—ã/–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫–≤–∏–∑–∞